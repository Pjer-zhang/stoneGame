import { Container } from './Container';
import { ListValue } from './Value';
import { Choice } from './Choice';
import { ListDefinitionsOrigin } from './ListDefinitionsOrigin';
import { InkObject } from './Object';
import { JObject } from './JObject';
export declare class JsonSerialisation {
    static ListToJArray(serialisables: InkObject[]): any[];
    static JArrayToRuntimeObjList(jArray: any[], skipLast?: boolean): InkObject[];
    static DictionaryRuntimeObjsToJObject(dictionary: Map<string, InkObject>): JObject;
    static JObjectToDictionaryRuntimeObjs(jObject: JObject): Map<string, InkObject>;
    static JObjectToIntDictionary(jObject: JObject): Map<string, number>;
    static IntDictionaryToJObject(dict: Map<string, number>): JObject;
    static JTokenToRuntimeObject(token: any): InkObject | null;
    static RuntimeObjectToJToken(obj: InkObject): string | number | JObject | null;
    static ContainerToJArray(container: Container): any[];
    static JArrayToContainer(jArray: any[]): Container;
    static JObjectToChoice(jObj: JObject): Choice;
    static ChoiceToJObject(choice: Choice): JObject;
    static InkListToJObject(listVal: ListValue): JObject;
    static ListDefinitionsToJToken(origin: ListDefinitionsOrigin): JObject;
    static JTokenToListDefinitions(obj: JObject): ListDefinitionsOrigin;
    private static _controlCommandNames;
}
