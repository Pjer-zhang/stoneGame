export declare class Path {
    static parentId: string;
    _isRelative: boolean;
    _components: Path.Component[];
    _componentsString: string | null;
    constructor();
    constructor(componentsString: string);
    constructor(head: Path.Component, tail: Path);
    constructor(head: Path.Component[], relative?: boolean);
    readonly isRelative: boolean;
    readonly componentCount: number;
    readonly head: Path.Component | null;
    readonly tail: Path;
    readonly length: number;
    readonly lastComponent: Path.Component | null;
    readonly containsNamedComponent: boolean;
    static readonly self: Path;
    GetComponent(index: number): Path.Component;
    PathByAppendingPath(pathToAppend: Path): Path;
    componentsString: string;
    toString(): string;
    Equals(otherPath: Path | null): boolean;
    PathByAppendingComponent(c: Path.Component): Path;
}
export declare namespace Path {
    class Component {
        readonly index: number;
        readonly name: string | null;
        constructor(indexOrName: string | number);
        readonly isIndex: boolean;
        readonly isParent: boolean;
        static ToParent(): Component;
        toString(): string | null;
        Equals(otherComp: Component): boolean;
    }
}
